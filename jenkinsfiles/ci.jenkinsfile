@Library('jenkinslib') _
def tools = new org.devops.tools()
def build = new org.devops.build()
def deploy = new org.devops.deploy()
pipeline {
    agent {
            image 'maven:3.8.1-adoptopenjdk-11' 
            args '-v /root/.m2:/root/.m2' 
    }
    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'branch choice')
        string(name: 'srcUrl', defaultValue: 'main', description: 'branch choice')
        choice(name: 'buildType', choices: ['gradle', 'maven', 'ant'], description: 'Pick something')
        choice(name: 'buildShell', choices: ['-v',' -B -DskipTests clean package'], description: 'Pick something')
    }
    
    stages {
        
        stage ("checkout"){
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/${BRANCH}']], extensions: [], userRemoteConfigs: [[credentialsId: 'f3641d1f-0ffe-4732-82b2-7ec742e9a31a', url: '${srcUrl}']]])
            }
        }
        
         stage ("invoke share library"){
            steps {
                script{
                   currentBuild.displayName = "${BUILD_TAG}-${buildType}"
                   println("share test")
                   hello()
                   tools.PrintMes("share Library")
                    
                }
            }
         }
         
         stage ("build"){
            steps {
                script{
                   
                    sh '''
                        pwd
                        ls
                        env |grep -i build
                        '''
                    build.Build(buildType,buildShell)
                }
            }
         }
         
         stage ("deploy"){
            steps {
                script{
                    deploy.Deploy("-i /root/hosts all ","-m ping")
                }
            }
         }
        
//         stage ("antbuild"){
//             steps {
//                 script{
//                     try{
//                         sh "ant ${buildShell}"
//                     } catch(e) {
//                         println(e)
//                     }
                    
//                 }
//             }
//          }

//          stage ("gradlebuild"){
//             steps {
//                 script{
//                     gradleHome = tool "GRADLE"
//                     sh "${gradleHome}/bin/gradle ${buildShell}"
//                 }
//             }
//          }
    }
}

